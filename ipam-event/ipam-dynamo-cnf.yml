AWSTemplateFormatVersion: '2010-09-09'

Resources:

  # Scheduled rule to trigger lambda every 5 mins
  Trigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(5 minutes)
      Targets: 
        - Id: TriggerLambda
          Arn: !GetAtt LambdaFunction.Arn

  # Lambda function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.7
      Code:
        ZipFile: |
          import json
          
          def handler(event, context):
            print(json.dumps(event))
            return "Success"
      
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
  
  # IAM role for lambda
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                Resource: arn:aws:logs:*:*:*
              
  # DynamoDB table with specific name
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ipam-data-dump
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH